#summary some definitions of the pogel API.

= Object class =

=== constructors: ===
{{{
POGEL::OBJECT();
POGEL::OBJECT(unsigned int p);
POGEL::OBJECT(POGEL::TRIANGLE* tri, unsigned long trinum, unsigned int p);
POGEL::OBJECT(POGEL::TRIANGLE* tri, unsigned long trinum, unsigned int p, POGEL::POINT pos, POGEL::POINT rot);
                
POGEL::OBJECT(const char* name);
POGEL::OBJECT(const char* name, unsigned int p);
POGEL::OBJECT(const char* name, POGEL::TRIANGLE* tri, unsigned long trinum, unsigned int p);
POGEL::OBJECT(const char* name, POGEL::TRIANGLE* tri, unsigned long trinum, unsigned int p, POGEL::POINT pos, POGEL::POINT rot);

OBJECT(POGEL::OBJECT* obj);
}}}

  * `p` properties. appropriate values are:
    * `OBJECT_DEBUG`
    * `OBJECT_DRAW_DISPLAYLIST`
    * `OBJECT_DRAW_COLORED_STRIP`
    * `OBJECT_DRAW_CHILDREN`
    * `OBJECT_ROTATE_XYZ`
    * `OBJECT_SORT_TRIANGLES`
    * `OBJECT_ROTATE_TOCAMERA`
  * `tri` an array of triangles.
  * `trinum` number of triangles in the array `tri`.
  * `pos` a point object that is the object's position.
  * `rot` a point object for the object's rotation.
  * `name` a char array for the name of the object.
  * `obj` pointer to object to copy, beware all pointers are referenced.

=== attributes: ===
{{{
POGEL::POINT position; // the center position of the object
POGEL::POINT rotation; // the rotation arround the center of the object
POGEL::VECTOR direction; // the movement vector
POGEL::VECTOR spin; // the spin vector
unsigned int base; // the pointer ot the compiled display list
POGEL::MATRIX matrix;
bool visable;
}}}

  * `position` the position of the object, is modifiable.
  * `rotation` the rotation of the object.
  * `direction` the direction and velocity vector.
  * `spin` the rotation velovity.
  * `base` the opengl draw list pointer thingy...
  * `matrix` the matrix for getting rotation and position modifications, will be overwitten at each call of `draw()`.
  * `visable` weather or not to draw the object.